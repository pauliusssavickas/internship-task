[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Paulius\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Paulius\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 49.0836ms
[debug]       Load.loadUnit: defsScala took 0.2445ms
[debug] [Loading] Scanning directory C:\Users\Paulius\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Paulius\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.821 ms
[debug]           Load.resolveProject(global-plugins) took 31.3524ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Paulius\.sbt\1.0\plugins, plugins: List(<none>))) took 55.1662ms
[debug] [Loading] Done in C:\Users\Paulius\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 68.5806ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2142ms
[debug]     Load.loadUnit(file:/C:/Users/Paulius/.sbt/1.0/plugins/, ...) took 124.1285ms
[debug]   Load.apply: load took 236.3288ms
[debug]   Load.apply: resolveProjects took 3.9799ms
[debug]   Load.apply: finalTransforms took 36.1887ms
[debug]   Load.apply: config.delegates took 3.9351ms
[debug]   Load.apply: Def.make(settings)... took 198.8381ms
[debug]   Load.apply: structureIndex took 48.239ms
[debug]   Load.apply: mkStreams took 0.9397ms
[info] loading global plugins from C:\Users\Paulius\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2069.2929ms
[debug]           Load.loadUnit: plugins took 15.4417ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\Paulius\Desktop\ScalaTest\project
[debug]             Load.loadUnit: mkEval took 3.2241ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Paulius\Desktop\ScalaTest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7847 ms
[info] loading settings for project scalatest-build from idea.sbt ...
[debug]               Load.resolveProject(scalatest-build) took 1.6875ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalatest-build, base: C:\Users\Paulius\Desktop\ScalaTest\project, plugins: List(<none>))) took 2.7274ms
[debug] [Loading] Done in C:\Users\Paulius\Desktop\ScalaTest\project, returning: (scalatest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1065.169ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.942ms
[debug]         Load.loadUnit(file:/C:/Users/Paulius/Desktop/ScalaTest/project/, ...) took 1084.0282ms
[debug]       Load.apply: load took 1084.8862ms
[debug]       Load.apply: resolveProjects took 0.0727ms
[debug]       Load.apply: finalTransforms took 5.5685ms
[debug]       Load.apply: config.delegates took 0.1674ms
[debug]       Load.apply: Def.make(settings)... took 34.3792ms
[debug]       Load.apply: structureIndex took 16.0005ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\Paulius\Desktop\ScalaTest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3947.4624ms
[debug]     Load.loadUnit: defsScala took 0.0016ms
[debug] [Loading] Scanning directory C:\Users\Paulius\Desktop\ScalaTest
[debug]       Load.loadUnit: mkEval took 0.1533ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1954 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 18.8711ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Paulius\Desktop\ScalaTest, plugins: List(<none>))) took 21.2539ms
[debug] [Loading] Done in C:\Users\Paulius\Desktop\ScalaTest, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 714.898ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.5454ms
[debug]   Load.loadUnit(file:/C:/Users/Paulius/Desktop/ScalaTest/, ...) took 4671.361ms
[debug] Load.apply: load took 4672.4211ms
[debug] Load.apply: resolveProjects took 0.0696ms
[debug] Load.apply: finalTransforms took 12.2368ms
[debug] Load.apply: config.delegates took 0.1389ms
[debug] Load.apply: Def.make(settings)... took 35.5204ms
[debug] Load.apply: structureIndex took 14.6054ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to ScalaTest (in build file:/C:/Users/Paulius/Desktop/ScalaTest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51576 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51576, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaTest (in build file:/C:/Users/Paulius/Desktop/ScalaTest/)
[debug] > Exec(idea-shell, None, None)
